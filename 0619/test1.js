// 알고리즘 수업 - 알고리즘의 수행 시간 1 [24262번]
console.log(1);
console.log(0);

// 문제 풀이
// 코드1인  return A[i]; 의 실행횟수는 어떤 숫자가 들어오도 실행은 1번

// 최고차항이란?
// n²이 있다면 n 위에 있는 제곱, 세제곱, 4제곱..같은 지수(차수)를 보고 최고차항을 판단
// n은 계수라함
// 최고차항의 차수만 남긴것이 시간복잡도가 된다.
// 수식이 반복이 된다면 시간복잡도는 늘어난다.

// 연산 형태                        실행 횟수       시간 복잡도     차수
// ----------------------------------------------------------------
// i = Math.floor(n / 2)          → 1번 실행     → O(1)       → 0차
// i = Math.sqrt(n)               → 1번 실행     → O(1)       → 0차
// for (i = 0; i < n; i++)        → n번 실행     → O(n)       → 1차
// for (i = 0; i < n; i++) {
//     for (j = 0; j < n; j++)    → n * n번 실행 → O(n^2)     → 2차
// }

// n이 아무리 커도
// i = ⌊n / 2⌋;와 return A[i]; 한번만 실행되고
// 이는 시간복잡도 O(1)을 나타낸다.
// 그렇기에 최고차항은 0임을 알 수 있다.
